name: Setup Grafana RaspberryPi

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  setup-raspberry-pi:
    runs-on: self-hosted
    strategy:
      matrix:
        python: [3.7]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: setup GCP access
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: Download JSON from GCS
      run: |
        gsutil cp gs://${{ secrets.GCP_BUCKET_NAME }}/*.prom docker/staticfile-exporter/metrics
    - name: install docker
      run: |
        ./docker/install.sh
    - name: start docker images
      env:
        OPENWEATHER_CITY: ${{ secrets.OPENWEATHER_CITY }}
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        OPENWEATHER_LISTEN_ADDRESS: ${{ secrets.OPENWEATHER_LISTEN_ADDRESS }}
        TADOAC_USERNAME: ${{ secrets.TADOAC_USERNAME }}
        TADOAC_PASSWORD: ${{ secrets.TADOAC_PASSWORD }}
        TODOIST_API_KEY: ${{ secrets.TODOIST_API_KEY }}
        TODOIST_PORT: ${{ secrets.TODOIST_PORT }}
        GRAFANA_REMOTE_WRITE_USERNAME: ${{ secrets.GRAFANA_REMOTE_WRITE_USERNAME }}
        GRAFANA_REMOTE_WRITE_API_KEY: ${{ secrets.GRAFANA_REMOTE_WRITE_API_KEY }}
      run: |
        ./docker/start.sh
    - name: setup grafana-kiosk
      env:
          GRAFANA_KIOSK_URL: ${{ secrets.GRAFANA_KIOSK_URL }}
          GRAFANA_KIOSK_USERNAME: ${{ secrets.GRAFANA_KIOSK_USERNAME }}
          GRAFANA_KIOSK_PASSWORD: ${{ secrets.GRAFANA_KIOSK_PASSWORD }}
      run: |
        ./grafana-kiosk/install.sh
        ./grafana-kiosk/start.sh
    - name: set crontab
      run: |
        sudo cp -r ./crontab/bin/* /usr/local/bin/
        sudo cp -r ./crontab/settings/* /etc/cron.d/
        echo "success copy crontab scripts"
    - name: Done
      run: |
        echo "All Done!"
