name: Deploy

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]
  workflow_dispatch:
    inputs:
      rm_state:
        description: 'inject docker compose down'
        type: boolean
        default: false

jobs:
  execute:
    runs-on: [self-hosted, grafstation]
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Check ansible installed
      id: check-ansible
      run: |
        if which ansible > /dev/null; then
          echo "installed=false" >> $GITHUB_OUTPUT
        else
          echo "installed=true" >> $GITHUB_OUTPUT
        fi

    - name: Install ansible
      if: steps.check-ansible.outputs.installed == false
      run: brew install ansible

    - name: Update ansible
      if: steps.check-ansible.outputs.installed == true
      run: brew upgrade ansible
      env:
        HOMEBREW_NO_INSTALL_UPGRADE: true

    - name: Set ansible mode
      id: set-mode
      run: |
          if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            echo "execute with normal mode"
            echo "options=''" >> $GITHUB_OUTPUT
          else
            echo "execute with check mode"
            echo "options='--check'" >> $GITHUB_OUTPUT
          fi

    - name: Run playbook
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: site.yml
        options: --inventory ./inventory/localhost.yml ${{ steps.set-mode.outputs.options }}
      env:
        ABEMA_JWT_TOKEN: ${{ secrets.ABEMA_JWT_TOKEN }}
        ASKEN_PASSWORD: ${{ secrets.ASKEN_PASSWORD }}
        ASKEN_USERNAME: ${{ secrets.ASKEN_USERNAME }}
        GRAFANA_ADMIN_PASSWORD: ${{ secrets.GRAFANA_ADMIN_PASSWORD }}
        GRAFSTATION_SUDO_PASS: ${{ secrets.GRAFSTATION_SUDO_PASS }}
        GREENCH_EMAIL: ${{ secrets.GREENCH_EMAIL }}
        GREENCH_PASSWORD: ${{ secrets.GREENCH_PASSWORD }}
        MONEYFORWARD_EMAIL: ${{ secrets.MONEYFORWARD_EMAIL }}
        MONEYFORWARD_PASSWORD: ${{ secrets.MONEYFORWARD_PASSWORD }}
        NATURE_DEVICE_NAME: ${{ secrets.NATURE_DEVICE_NAME }}
        NATURE_OAUTH_TOKEN: ${{ secrets.NATURE_OAUTH_TOKEN }}
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        OPENWEATHER_CITY: ${{ secrets.OPENWEATHER_CITY }}
        OURA_ACCESS_TOKEN: ${{ secrets.OURA_ACCESS_TOKEN }}
        OURA_TZ: ${{ secrets.OURA_TZ }}
        RECREATE_CONTAINER: ${{ inputs.rm_state }}
        SNMP_PASSWORD: ${{ secrets.SNMP_PASSWORD }}
        SNMP_PRIV_PASSWORD: ${{ secrets.SNMP_PRIV_PASSWORD }}
        SNMP_USERNAME: ${{ secrets.SNMP_USERNAME }}
        SPEEDTEST_SERVER_IDS: ${{ secrets.SPEEDTEST_SERVER_IDS }}
        WITHINGS_ACCESS_TOKEN: ${{ secrets.WITHINGS_ACCESS_TOKEN }}
        WITHINGS_CLIENT_ID: ${{ secrets.WITHINGS_CLIENT_ID }}
        WITHINGS_CONSUMER_SECRET: ${{ secrets.WITHINGS_CONSUMER_SECRET }}
        WITHINGS_CREATED: ${{ secrets.WITHINGS_CREATED }}
        WITHINGS_REFRESH_TOKEN: ${{ secrets.WITHINGS_REFRESH_TOKEN }}
        WITHINGS_TZ: "Asia/Tokyo"
        WITHINGS_USERID: ${{ secrets.WITHINGS_USERID }}
        YOUTUBE_PLAYLIST_ID: ${{ secrets.YOUTUBE_PLAYLIST_ID }}
