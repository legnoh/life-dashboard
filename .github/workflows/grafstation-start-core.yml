name: Start grafstation

on:
  push:
    branches:
    - main
    paths:
    - '.github/workflows/grafstation-start-core.yml'
    - 'grafstation/configs/epgstation/**'
    - 'grafstation/configs/html/**'
    - 'grafstation/configs/docker-compose.yml'
    - 'grafstation/configs/nginx.conf'
    - 'grafstation/configs/prometheus.yml'
    - 'grafstation/start.sh'
  workflow_dispatch:
    inputs:
      rm_state:
        description: 'inject docker compose down'
        type: boolean
        default: false
  workflow_run:
    workflows:
    - Generate SNMP config
    - Start mirakc
    types: [ completed ]

jobs:
  setup:
    runs-on: [self-hosted, grafstation]
    if:  ${{ github.event_name == 'push' }} || ${{ github.event_name == 'workflow_dispatch' }} || ${{ github.event.workflow_run.conclusion == 'success' }}
    defaults:
      run:
        working-directory: ./grafstation
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Copy configs
      run: |
        mkdir -p ${HOME}/life-dashboard/{epgstation/{config,data/{key,streamfiles},drop,img,thumbnail,logs/{EPGUpdater,Operator,Service},recorded},konomi/{data,logs,record,capture},prometheus,configs,withings}
        mkdir -p ${HOME}/{.hap-switch-command,.hap-nature-remo}
        cp -r configs/html ${HOME}/life-dashboard/configs/
        curl -Lo ${HOME}/life-dashboard/configs/html/player/mpegts.js \
          https://github.com/xqq/mpegts.js/releases/download/v1.7.3/mpegts.js
        curl -Lo ${HOME}/life-dashboard/configs/html/player/mpegts.js.map \
          https://github.com/xqq/mpegts.js/releases/download/v1.7.3/mpegts.js.map
        cp -r configs/epgstation/* ${HOME}/life-dashboard/epgstation/config/
        cp -r configs/docker-compose.yml ${HOME}/life-dashboard/configs/
        cp -r configs/nginx.conf ${HOME}/life-dashboard/configs/
        cp -r configs/prometheus.yml ${HOME}/life-dashboard/prometheus/prometheus.yml
        cp -r configs/hap-switch-command.yml ${HOME}/.hap-switch-command/config.yml
        envsubst < configs/hap-nature-remo.yml > ${HOME}/.hap-nature-remo/config.yml
        envsubst < configs/konomi-config.yaml > ${HOME}/life-dashboard/konomi/config.yaml
      env:
        NATURE_OAUTH_TOKEN: ${{ secrets.NATURE_OAUTH_TOKEN }}

    - name: Start homebrew services
      run: |
        brew services restart node_exporter
        brew services restart hap-switch-command
        brew services restart hap-nature-remo

    - name: Start docker images
      env:
        RECREATE_CONTAINER: ${{ inputs.rm_state }}
        ASKEN_PASSWORD: ${{ secrets.ASKEN_PASSWORD }}
        ASKEN_USERNAME: ${{ secrets.ASKEN_USERNAME }}
        MONEYFORWARD_EMAIL: ${{ secrets.MONEYFORWARD_EMAIL }}
        MONEYFORWARD_PASSWORD: ${{ secrets.MONEYFORWARD_PASSWORD }}
        NATURE_OAUTH_TOKEN: ${{ secrets.NATURE_OAUTH_TOKEN }}
        OPENWEATHER_CITY: ${{ secrets.OPENWEATHER_CITY }}
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        SPEEDTEST_SERVER_IDS: ${{ secrets.SPEEDTEST_SERVER_IDS }}
        TODOIST_API_KEY: ${{ secrets.TODOIST_API_KEY }}
        WITHINGS_ACCESS_TOKEN: ${{ secrets.WITHINGS_ACCESS_TOKEN }}
        WITHINGS_CLIENT_ID: ${{ secrets.WITHINGS_CLIENT_ID }}
        WITHINGS_CONSUMER_SECRET: ${{ secrets.WITHINGS_CONSUMER_SECRET }}
        WITHINGS_CREATED: ${{ secrets.WITHINGS_CREATED }}
        WITHINGS_REFRESH_TOKEN: ${{ secrets.WITHINGS_REFRESH_TOKEN }}
        WITHINGS_TZ: "Asia/Tokyo"
        WITHINGS_USERID: ${{ secrets.WITHINGS_USERID }}
      run: |
        ./start.sh
