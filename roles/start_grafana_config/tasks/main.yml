---

- name: Start grafana config
  block:
    - name: Get LaunchAgent status
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/Library/LaunchAgents/io.lkj.life.dashboard.grafstation.grafana.apply.plist"
      register: launchagent

    - name: Stop grafana-config daemon
      when:
        - not ansible_check_mode
        - launchagent.stat.exists
      community.general.launchd:
        name: io.lkj.life.dashboard.grafstation.grafana.apply
        state: unloaded

    - name: Tap custom repos
      check_mode: false
      community.general.homebrew_tap:
        name: legnoh/etc

    - name: Install Brew packages
      when: not ansible_check_mode
      community.general.homebrew:
        name:
          - ffmpeg
          - legnoh/etc/focus-cli
          - gettext # for envsubst
          - jq
          - streamlink
          - terraform
        state: upgraded

    - name: Create config directories
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - grafstation/configs/html/stream
        - Library/Application Support/streamlink/plugins

    - name: Copy config files
      when: not ansible_check_mode
      ansible.builtin.synchronize:
        src: "{{ item }}"
        dest: "{{ ansible_env.HOME }}/grafstation/configs/{{ item }}"
        recursive: true
        delete: true
      loop:
        - grafana/
        - stream/

    - name: Download remote files(streamlink plugin)
      when: not ansible_check_mode
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/legnoh/streamlink-plugin-greenchannel/refs/heads/main/greenchannel/greenchannel.py"
        dest: "{{ ansible_env.HOME }}/Library/Application Support/streamlink/plugins/greenchannel.py"
        mode: '0644'

    - name: Check terraform init & upgrade
      when: not ansible_check_mode
      community.general.terraform:
        project_path: "{{ ansible_env.HOME }}/grafstation/configs/grafana"
        plan_file: /tmp/grafana-plan.log
        force_init: true
        provider_upgrade: true
        state: planned
      environment:
        GRAFANA_AUTH: "admin:{{ start_grafana_config_grafana_admin_password }}"

    - name: Create launchd definition file
      when: not ansible_check_mode
      ansible.builtin.template:
        src: apply.plist.j2
        dest: "{{ ansible_env.HOME }}/Library/LaunchAgents/io.lkj.life.dashboard.grafstation.grafana.apply.plist"
        mode: '0644'

    - name: Start grafana-config daemon
      when: not ansible_check_mode
      community.general.launchd:
        name: io.lkj.life.dashboard.grafstation.grafana.apply
        state: reloaded

  always:
    - name: Remove temp file
      ansible.builtin.file:
        path: /tmp/grafana-plan.log
        state: absent

    - name: Remove stream state
      ansible.builtin.file:
        path: /tmp/start.stream
        state: absent
